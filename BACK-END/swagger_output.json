{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Noroff E-Commerce ",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Brand",
      "description": "Brand operations"
    },
    {
      "name": "Category",
      "description": "Category operations"
    },
    {
      "name": "Product",
      "description": "Product operations"
    },
    {
      "name": "Order",
      "description": "Order operations"
    },
    {
      "name": "User",
      "description": "User operations"
    },
    {
      "name": "Admin",
      "description": "Admin operations. The routes inside this group render pages for admin. It is seperate unit than Backend.Use Backend Routes for json responses "
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/init/": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Guest"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "This is the Login Page for Admin or User",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login for Admin or User based on role",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login for Admin or User based on role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/signup": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "This is the Signup Page for User",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Signup for new User",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Signup for Admin or User based on role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSignup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Logout for Admin or User based on role",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Show all products",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Create a Product by Admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create a Product by Admin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/search": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Search products by name, category, and brand",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Search products by name, category, and brand",
            "required": true,
            "schema": {
              "$ref": "#/definitions/searchProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Get product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Update a Product by Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update a Product by Admin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Delete a Product by Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}/undelete": {
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Undelete a Product by Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/category/": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Get all Categories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "description": "Create a Category by Admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create a Category by Admin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Show a Category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "description": "Update a Category by Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update a Category by Admin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "description": "Delete a Category by Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Delete a Category by Admin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/brand/": {
      "get": {
        "tags": [
          "Brand"
        ],
        "description": "Get all brands",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Brand"
        ],
        "description": "Create brand by Admin ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create brand by Admin xx ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBrand"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/brand/{id}": {
      "put": {
        "tags": [
          "Brand"
        ],
        "description": "Update a brand by Admin ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update a brand by Admin ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Brand"
        ],
        "description": "Delete a brand by Admin ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Delete a brand by Admin ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/search/": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Search a product for all users guest, user, admin ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Search a product for all users guest, user, admin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/searchProductByAllUsers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart/": {
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can add items to cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "A registered user can add items to cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addItemToCart"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can see his/her cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can update items in cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "A registered user can update items in cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCartItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can remove item in cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "A registered user can remove item in cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/removeItemFromCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart/checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "A registered user can checkout the cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Create order by user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Admin can get all orders needs admin token for authorization",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/myorders": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "A registered user can see his/her all orders",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/status": {
      "patch": {
        "tags": [
          "Order"
        ],
        "description": "Admin can update order status needs Admin Token for authorization",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Admin can update order status needs Admin Token for authorization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateOrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Admin can get order by id needs Admin Token for authorization",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Admin can get order by id needs Admin Token for authorization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getOrderId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "User gets his/her details",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get all users by Admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Admin updates user details. try not to use it for admin, otherwise, It will not be possible to login as admin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Admin updates user details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserByAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Admin deletes a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}/role": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Admin updates user role",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Admin updates user role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserRoleByAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Admin Page needs token. This route produces render adminPanel.ejs",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/brands": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Admin Get Brands Page",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Admin Get Categories Page",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/allusers": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Admin Page needs token. This route gets all users by Admin. This route produces render adminPanel.ejs user routes for json response",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Admin Page needs token. This route gets all users by Admin. This route produces render adminPanel.ejs user routes for json response",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/login": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "This is the Login Page for only admin",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Login for Admin for front page",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login for Admin for front page",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frontadminlogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/registeredUsers/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "This route render page for registered users. This route produces render userPanel.ejs",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/guest/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/guest/guestcategory": {
      "get": {
        "tags": [
          "Guest"
        ],
        "description": "This route render page for guest users. This route produces render guestCategory.ejs",
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/guest/guestbrand": {
      "get": {
        "tags": [
          "Guest"
        ],
        "description": "This route render page for guest users. This route produces render guestBrand.ejs",
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Login": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "example": "Admin"
        },
        "password": {
          "type": "string",
          "example": "P@ssword2023"
        }
      },
      "required": [
        "identifier",
        "password"
      ]
    },
    "UserSignup": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "johndoe@example.com"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "address": {
          "type": "string",
          "example": "Oslo"
        },
        "telephonenumber": {
          "type": "string",
          "example": "12345678"
        }
      },
      "required": [
        "firstname",
        "lastname",
        "username",
        "email",
        "password",
        "address",
        "telephonenumber"
      ]
    },
    "createBrand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Swagger Brand"
        }
      },
      "required": [
        "name"
      ]
    },
    "updateBrand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Swagger Updated  Brand"
        }
      },
      "required": [
        "name"
      ]
    },
    "deleteBrand": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "id"
      ]
    },
    "createCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Swagger Category"
        }
      },
      "required": [
        "name"
      ]
    },
    "updateCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Swagger Updated Category"
        }
      },
      "required": [
        "name"
      ]
    },
    "deleteCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "id"
      ]
    },
    "searchProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "iPhone"
        },
        "category": {
          "type": "string",
          "example": "Phones"
        },
        "brand": {
          "type": "string",
          "example": "Apple"
        }
      },
      "required": [
        "name",
        "category",
        "brand"
      ]
    },
    "createProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Swagger Product"
        },
        "description": {
          "type": "string",
          "example": "Swagger Description"
        },
        "price": {
          "type": "number",
          "example": 1000
        },
        "quantity": {
          "type": "number",
          "example": 10
        },
        "date_added": {
          "type": "string",
          "example": "2022-01-01"
        },
        "imgurl": {
          "type": "string",
          "example": "https://example.com/image.jpg"
        },
        "status": {
          "type": "string",
          "example": "available"
        },
        "brandName": {
          "type": "string",
          "example": "Swagger Brand"
        },
        "categoryName": {
          "type": "string",
          "example": "Swagger Category"
        },
        "discount": {
          "type": "number",
          "example": 4
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "date_added",
        "imgurl",
        "status",
        "brandName",
        "categoryName",
        "discount"
      ]
    },
    "updateProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Swagger New  Product"
        },
        "description": {
          "type": "string",
          "example": "Swagger Description"
        },
        "price": {
          "type": "number",
          "example": 1000
        },
        "quantity": {
          "type": "number",
          "example": 10
        },
        "date_added": {
          "type": "string",
          "example": "2022-01-01"
        },
        "imgurl": {
          "type": "string",
          "example": "https://example.com/image.jpg"
        },
        "status": {
          "type": "string",
          "example": "available"
        },
        "brandName": {
          "type": "string",
          "example": "Swagger Brand"
        },
        "categoryName": {
          "type": "string",
          "example": "Swagger Category"
        },
        "discount": {
          "type": "number",
          "example": 4
        },
        "isDeleted": {
          "type": "number",
          "example": 0
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "date_added",
        "imgurl",
        "status",
        "brandName",
        "categoryName",
        "discount",
        "isDeleted"
      ]
    },
    "updateUserByAdmin": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "Swagger John"
        },
        "lastname": {
          "type": "string",
          "example": "Swagger Doe"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "johndoe@example.com"
        },
        "address": {
          "type": "string",
          "example": "Oslo"
        },
        "telephonenumber": {
          "type": "string",
          "example": "12345678"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "MembershipStatusId": {
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "type": "string",
          "example": "2022-01-01"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-01-01"
        }
      },
      "required": [
        "firstname",
        "lastname",
        "username",
        "email",
        "address",
        "telephonenumber",
        "role",
        "MembershipStatusId",
        "createdAt",
        "updatedAt"
      ]
    },
    "updateUserRoleByAdmin": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "admin"
        }
      }
    },
    "addItemToCart": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "number",
          "example": 6
        },
        "quantity": {
          "type": "number",
          "example": 8
        }
      },
      "required": [
        "productId",
        "quantity"
      ]
    },
    "updateCartItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "number",
          "example": 6
        },
        "quantity": {
          "type": "number",
          "example": 8
        }
      },
      "required": [
        "productId",
        "quantity"
      ]
    },
    "removeItemFromCart": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "number",
          "example": 6
        }
      },
      "required": [
        "productId"
      ]
    },
    "updateOrderStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "ordered"
        },
        "orderId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "status",
        "orderId"
      ]
    },
    "getOrderId": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "orderId"
      ]
    },
    "searchProductByAllUsers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "iPhone 6s Plus 16Gb"
        }
      },
      "required": [
        "name"
      ]
    },
    "frontadminlogin": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "example": "Admin"
        },
        "password": {
          "type": "string",
          "example": "P@ssword2023"
        }
      },
      "required": [
        "identifier",
        "password"
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}